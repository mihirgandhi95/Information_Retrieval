Task 3 ExplanationFor task 3 
To avoid running into errors when sending a request for the url, I am checking if the status that is returned when I send a request for the page is 200. This avoids link redirection, ConnectionError and all other similar exceptions.The seed is pre specified. I take the input from the user for the keywordsThe keywords are stored in an array. I repeat the procedure for task 1 and task 2 but this time I check if the keyword is present in the link or in the anchor text.If it is present in either, I use enchant to check if the lowercase version of the keyword and the lowercase version of the token generated by using regular expression split exists in the enchant English dictionary. If it does, then I pass the link to be added to the frontier. This approach of using regular expressions splits the URL into keywords that are used as tokens. It splits the keywords at special characters and underscores because I have designed the regular expression to be that way.After the depth of crawling reaches 1000, the process stops. I write all the 1000 links to a file. However, these 1000 links contain duplicates, so I process further to remove the duplicates. 